//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DM.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sms.tsms.ir/", ConfigurationName="ServiceReference1.tsmsService")]
    public interface tsmsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] sendSms(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> sendSmsAsync(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] sendSmsExt(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid, int[] send_dates);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> sendSmsExtAsync(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid, int[] send_dates);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendSmsResult")]
        int[] sendSmsGroup(string username, string password, string sms_number, string mobile, string msg, int mclass, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendSmsResult")]
        System.Threading.Tasks.Task<int[]> sendSmsGroupAsync(string username, string password, string sms_number, string mobile, string msg, int mclass, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] GetDeliverySms(string username, string password, int[] recipientIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> GetDeliverySmsAsync(string username, string password, int[] recipientIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] WsdlCheckSend(string username, string password, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> WsdlCheckSendAsync(string username, string password, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] DeleteSendSMSQueue(string username, string password, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> DeleteSendSMSQueueAsync(string username, string password, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] sendSoundOfText(string username, string password, string phones, string msg, string speaker, int gainLevel, int pitchLevel, int punctuationLevel, int speechSpeedLevel, int toneLevel, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> sendSoundOfTextAsync(string username, string password, string phones, string msg, string speaker, int gainLevel, int pitchLevel, int punctuationLevel, int speechSpeedLevel, int toneLevel, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int[] sendSound(string username, string password, string phones, string title, int soundid, int soundIdType, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> sendSoundAsync(string username, string password, string phones, string title, int soundid, int soundIdType, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadResponse")]
        int[] upload(string username, string password, string title, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] binaryfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadResponse")]
        System.Threading.Tasks.Task<int[]> uploadAsync(string username, string password, string title, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] binaryfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetDeliverySoundResponse")]
        DM.ServiceReference1.object1[] GetDeliverySound(string username, string password, string phones, int idsendsound);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetDeliverySoundResponse")]
        System.Threading.Tasks.Task<DM.ServiceReference1.object1[]> GetDeliverySoundAsync(string username, string password, string phones, int idsendsound);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetDeliverySmsGroupResponse")]
        DM.ServiceReference1.object2[] GetDeliverySmsGroup(string username, string password, string phones, int idsendsms);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetDeliverySmsGroupResponse")]
        System.Threading.Tasks.Task<DM.ServiceReference1.object2[]> GetDeliverySmsGroupAsync(string username, string password, string phones, int idsendsms);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetSmsReceivedResponse")]
        DM.ServiceReference1.object3[] GetSmsReceived(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetSmsReceivedResponse")]
        System.Threading.Tasks.Task<DM.ServiceReference1.object3[]> GetSmsReceivedAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetSmsReceivedIdResponse")]
        DM.ServiceReference1.object3[] GetSmsReceivedId(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetSmsReceivedIdResponse")]
        System.Threading.Tasks.Task<DM.ServiceReference1.object3[]> GetSmsReceivedIdAsync(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendSoundOfPatternResponse")]
        int[] sendSoundOfPattern(string username, string password, string phone, string title, int patternid, string[] patternVariables, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendSoundOfPatternResponse")]
        System.Threading.Tasks.Task<int[]> sendSoundOfPatternAsync(string username, string password, string phone, string title, int patternid, string[] patternVariables, int tryCount, int MinuteBetweenTry, string messageid);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object1))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="UserInfoResponse")]
        DM.ServiceReference1.objectInfo[] UserInfo(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="UserInfoResponse")]
        System.Threading.Tasks.Task<DM.ServiceReference1.objectInfo[]> UserInfoAsync(string username, string password);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://sms.tsms.ir/")]
    public partial class object1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private string phoneField;
        
        private int trycountField;
        
        private bool trycountFieldSpecified;
        
        private int durationField;
        
        private bool durationFieldSpecified;
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
                this.RaisePropertyChanged("statusSpecified");
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        /// <remarks/>
        public int trycount {
            get {
                return this.trycountField;
            }
            set {
                this.trycountField = value;
                this.RaisePropertyChanged("trycount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool trycountSpecified {
            get {
                return this.trycountFieldSpecified;
            }
            set {
                this.trycountFieldSpecified = value;
                this.RaisePropertyChanged("trycountSpecified");
            }
        }
        
        /// <remarks/>
        public int duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("duration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
                this.RaisePropertyChanged("durationSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://sms.tsms.ir/")]
    public partial class objectInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int creditField;
        
        private bool creditFieldSpecified;
        
        private string[] sms_numebrsField;
        
        /// <remarks/>
        public int credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
                this.RaisePropertyChanged("credit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool creditSpecified {
            get {
                return this.creditFieldSpecified;
            }
            set {
                this.creditFieldSpecified = value;
                this.RaisePropertyChanged("creditSpecified");
            }
        }
        
        /// <remarks/>
        public string[] sms_numebrs {
            get {
                return this.sms_numebrsField;
            }
            set {
                this.sms_numebrsField = value;
                this.RaisePropertyChanged("sms_numebrs");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://sms.tsms.ir/")]
    public partial class object3 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string phoneField;
        
        private string sms_numberField;
        
        private string msgField;
        
        private string dateField;
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
                this.RaisePropertyChanged("statusSpecified");
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("idSpecified");
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        /// <remarks/>
        public string sms_number {
            get {
                return this.sms_numberField;
            }
            set {
                this.sms_numberField = value;
                this.RaisePropertyChanged("sms_number");
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
                this.RaisePropertyChanged("msg");
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://sms.tsms.ir/")]
    public partial class object2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private string phoneField;
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
                this.RaisePropertyChanged("statusSpecified");
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface tsmsServiceChannel : DM.ServiceReference1.tsmsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class tsmsServiceClient : System.ServiceModel.ClientBase<DM.ServiceReference1.tsmsService>, DM.ServiceReference1.tsmsService {
        
        public tsmsServiceClient() {
        }
        
        public tsmsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public tsmsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public tsmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public tsmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[] sendSms(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid) {
            return base.Channel.sendSms(username, password, sms_number, mobile, msg, mclass, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSmsAsync(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid) {
            return base.Channel.sendSmsAsync(username, password, sms_number, mobile, msg, mclass, messageid);
        }
        
        public int[] sendSmsExt(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid, int[] send_dates) {
            return base.Channel.sendSmsExt(username, password, sms_number, mobile, msg, mclass, messageid, send_dates);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSmsExtAsync(string username, string password, string[] sms_number, string[] mobile, string[] msg, string[] mclass, string messageid, int[] send_dates) {
            return base.Channel.sendSmsExtAsync(username, password, sms_number, mobile, msg, mclass, messageid, send_dates);
        }
        
        public int[] sendSmsGroup(string username, string password, string sms_number, string mobile, string msg, int mclass, string messageid) {
            return base.Channel.sendSmsGroup(username, password, sms_number, mobile, msg, mclass, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSmsGroupAsync(string username, string password, string sms_number, string mobile, string msg, int mclass, string messageid) {
            return base.Channel.sendSmsGroupAsync(username, password, sms_number, mobile, msg, mclass, messageid);
        }
        
        public int[] GetDeliverySms(string username, string password, int[] recipientIds) {
            return base.Channel.GetDeliverySms(username, password, recipientIds);
        }
        
        public System.Threading.Tasks.Task<int[]> GetDeliverySmsAsync(string username, string password, int[] recipientIds) {
            return base.Channel.GetDeliverySmsAsync(username, password, recipientIds);
        }
        
        public int[] WsdlCheckSend(string username, string password, string messageid) {
            return base.Channel.WsdlCheckSend(username, password, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> WsdlCheckSendAsync(string username, string password, string messageid) {
            return base.Channel.WsdlCheckSendAsync(username, password, messageid);
        }
        
        public int[] DeleteSendSMSQueue(string username, string password, string messageid) {
            return base.Channel.DeleteSendSMSQueue(username, password, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> DeleteSendSMSQueueAsync(string username, string password, string messageid) {
            return base.Channel.DeleteSendSMSQueueAsync(username, password, messageid);
        }
        
        public int[] sendSoundOfText(string username, string password, string phones, string msg, string speaker, int gainLevel, int pitchLevel, int punctuationLevel, int speechSpeedLevel, int toneLevel, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSoundOfText(username, password, phones, msg, speaker, gainLevel, pitchLevel, punctuationLevel, speechSpeedLevel, toneLevel, tryCount, MinuteBetweenTry, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSoundOfTextAsync(string username, string password, string phones, string msg, string speaker, int gainLevel, int pitchLevel, int punctuationLevel, int speechSpeedLevel, int toneLevel, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSoundOfTextAsync(username, password, phones, msg, speaker, gainLevel, pitchLevel, punctuationLevel, speechSpeedLevel, toneLevel, tryCount, MinuteBetweenTry, messageid);
        }
        
        public int[] sendSound(string username, string password, string phones, string title, int soundid, int soundIdType, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSound(username, password, phones, title, soundid, soundIdType, tryCount, MinuteBetweenTry, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSoundAsync(string username, string password, string phones, string title, int soundid, int soundIdType, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSoundAsync(username, password, phones, title, soundid, soundIdType, tryCount, MinuteBetweenTry, messageid);
        }
        
        public int[] upload(string username, string password, string title, byte[] binaryfile) {
            return base.Channel.upload(username, password, title, binaryfile);
        }
        
        public System.Threading.Tasks.Task<int[]> uploadAsync(string username, string password, string title, byte[] binaryfile) {
            return base.Channel.uploadAsync(username, password, title, binaryfile);
        }
        
        public DM.ServiceReference1.object1[] GetDeliverySound(string username, string password, string phones, int idsendsound) {
            return base.Channel.GetDeliverySound(username, password, phones, idsendsound);
        }
        
        public System.Threading.Tasks.Task<DM.ServiceReference1.object1[]> GetDeliverySoundAsync(string username, string password, string phones, int idsendsound) {
            return base.Channel.GetDeliverySoundAsync(username, password, phones, idsendsound);
        }
        
        public DM.ServiceReference1.object2[] GetDeliverySmsGroup(string username, string password, string phones, int idsendsms) {
            return base.Channel.GetDeliverySmsGroup(username, password, phones, idsendsms);
        }
        
        public System.Threading.Tasks.Task<DM.ServiceReference1.object2[]> GetDeliverySmsGroupAsync(string username, string password, string phones, int idsendsms) {
            return base.Channel.GetDeliverySmsGroupAsync(username, password, phones, idsendsms);
        }
        
        public DM.ServiceReference1.object3[] GetSmsReceived(string username, string password) {
            return base.Channel.GetSmsReceived(username, password);
        }
        
        public System.Threading.Tasks.Task<DM.ServiceReference1.object3[]> GetSmsReceivedAsync(string username, string password) {
            return base.Channel.GetSmsReceivedAsync(username, password);
        }
        
        public DM.ServiceReference1.object3[] GetSmsReceivedId(string username, string password, int id) {
            return base.Channel.GetSmsReceivedId(username, password, id);
        }
        
        public System.Threading.Tasks.Task<DM.ServiceReference1.object3[]> GetSmsReceivedIdAsync(string username, string password, int id) {
            return base.Channel.GetSmsReceivedIdAsync(username, password, id);
        }
        
        public int[] sendSoundOfPattern(string username, string password, string phone, string title, int patternid, string[] patternVariables, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSoundOfPattern(username, password, phone, title, patternid, patternVariables, tryCount, MinuteBetweenTry, messageid);
        }
        
        public System.Threading.Tasks.Task<int[]> sendSoundOfPatternAsync(string username, string password, string phone, string title, int patternid, string[] patternVariables, int tryCount, int MinuteBetweenTry, string messageid) {
            return base.Channel.sendSoundOfPatternAsync(username, password, phone, title, patternid, patternVariables, tryCount, MinuteBetweenTry, messageid);
        }
        
        public DM.ServiceReference1.objectInfo[] UserInfo(string username, string password) {
            return base.Channel.UserInfo(username, password);
        }
        
        public System.Threading.Tasks.Task<DM.ServiceReference1.objectInfo[]> UserInfoAsync(string username, string password) {
            return base.Channel.UserInfoAsync(username, password);
        }
    }
}
